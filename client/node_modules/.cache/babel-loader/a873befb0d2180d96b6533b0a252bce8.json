{"ast":null,"code":"var _jsxFileName = \"/Users/isaacparsons/Desktop/freelance clients/Jayden Streets/server/client/src/Components/YoutubeFooter.js\";\nimport React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\nimport ProgressBar from './ProgressBar';\nexport default class YoutubeFooter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: false,\n      progress: 0.01,\n      volume: 0.5\n    };\n\n    this.togglePlaying = () => {\n      this.setState({\n        playing: !this.state.playing\n      });\n    };\n\n    this.progressBarDragged = x => {\n      var progress = (x - 300) / 500;\n      this.setState({\n        progress\n      });\n      this.player.seekTo(progress, 'fraction');\n    };\n\n    this.updateSongProgress = e => {\n      this.setState({\n        progress: e.played\n      });\n    };\n\n    this.updateSongDuration = e => {\n      this.setState({\n        songDuration: e\n      });\n    };\n\n    this.updateVolume = () => {};\n\n    this.ref = player => {\n      this.player = player;\n    };\n  }\n\n  render() {\n    var _this$props = this.props,\n        title = _this$props.title,\n        author = _this$props.author,\n        url = _this$props.url;\n    var _this$state = this.state,\n        progress = _this$state.progress,\n        playing = _this$state.playing,\n        volume = _this$state.volume;\n    var playPause = playing ? 'pause' : 'play_arrow';\n    return React.createElement(\"div\", {\n      style: {\n        height: 150,\n        width: '100%',\n        backgroundColor: '#b5b5b5',\n        position: 'fixed',\n        bottom: 0,\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ReactPlayer, {\n      ref: this.ref,\n      url: url,\n      width: 250,\n      height: 150,\n      playing: playing,\n      volume: volume,\n      onDuration: this.updateSongDuration,\n      onProgress: this.updateSongProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, title), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, author)), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        position: 'relative',\n        top: -7.6,\n        width: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(ProgressBar, {\n      width: 500,\n      height: 30,\n      progress: progress,\n      completedBarColor: \"#5e5e5e\",\n      notCompletedBarColor: \"#8f8f8f\",\n      cursorColor: \"#fff\",\n      render: x => this.progressBarDragged(x),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: this.togglePlaying,\n      style: {\n        fontSize: 100\n      },\n      class: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, playPause), React.createElement(ProgressBar, {\n      width: 100,\n      height: 20,\n      progress: volume,\n      completedBarColor: \"#5e5e5e\",\n      notCompletedBarColor: \"#8f8f8f\",\n      cursorColor: \"#fff\",\n      render: x => this.updateVolume(x),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/isaacparsons/Desktop/freelance clients/Jayden Streets/server/client/src/Components/YoutubeFooter.js"],"names":["React","Component","ReactPlayer","ProgressBar","YoutubeFooter","state","playing","progress","volume","togglePlaying","setState","progressBarDragged","x","player","seekTo","updateSongProgress","e","played","updateSongDuration","songDuration","updateVolume","ref","render","props","title","author","url","playPause","height","width","backgroundColor","position","bottom","display","flexDirection","padding","alignItems","top","justifyContent","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport ReactPlayer from 'react-player';\nimport ProgressBar from './ProgressBar';\n\nexport default class YoutubeFooter extends Component {\n\n    state = {\n        playing : false,\n        progress : 0.01,\n        volume : 0.5\n    }\n\n    togglePlaying = () => {\n        this.setState({playing: !this.state.playing})\n    }\n\n    progressBarDragged = (x) => {\n        var progress = (x - 300) / 500\n        this.setState({progress})\n        this.player.seekTo(progress, 'fraction')\n\n    }\n\n    updateSongProgress = (e) => {\n        this.setState({progress: e.played})\n    }\n\n    updateSongDuration = (e) => {\n        this.setState({songDuration: e})\n    }\n\n    updateVolume = () => {\n\n    }\n\n\n    ref = player => {\n        this.player = player\n    }\n\n    render() {\n        var {title, author, url} = this.props\n        var {progress, playing, volume} = this.state\n        var playPause = playing ? 'pause' : 'play_arrow'\n        return (\n            <div style = {{\n                height: 150, \n                width: '100%', \n                backgroundColor: '#b5b5b5', \n                position: 'fixed', \n                bottom: 0,\n                display: 'flex',\n                flexDirection: 'row'}}>\n\n                <ReactPlayer \n                    ref={this.ref}\n                    url={url}\n                    width = {250}\n                    height = {150}\n                    playing = {playing}\n                    volume = {volume}\n                    onDuration = {this.updateSongDuration}\n                    onProgress = {this.updateSongProgress}/>\n\n                <div style = {{padding: 20}}>\n                    <h5>{title}</h5>\n                    <h6>{author}</h6>\n                </div>\n\n                <div style = {{display: 'flex', flexDirection: 'column', alignItems: 'center',position: 'relative', top: -7.6, width: 500}}>   \n                    <ProgressBar \n                        width = {500} \n                        height = {30} \n                        progress = {progress}\n                        completedBarColor = \"#5e5e5e\"\n                        notCompletedBarColor = \"#8f8f8f\"\n                        cursorColor = \"#fff\"\n                        render = {(x) => this.progressBarDragged(x)}/>\n                    <div style = {{\n                        display: 'flex', \n                        flexDirection: 'row', \n                        justifyContent: 'space-between', \n                        alignItems: 'center', \n                        width: '100%'}}>\n\n                        <i onClick = {this.togglePlaying} style = {{fontSize: 100}} class=\"material-icons\">{playPause}</i>\n\n                        <ProgressBar \n                            width = {100} \n                            height = {20} \n                            progress = {volume}\n                            completedBarColor = \"#5e5e5e\"\n                            notCompletedBarColor = \"#8f8f8f\"\n                            cursorColor = \"#fff\"\n                            render = {(x) => this.updateVolume(x)}/>\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}