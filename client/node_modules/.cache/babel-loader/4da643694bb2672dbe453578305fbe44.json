{"ast":null,"code":"var _jsxFileName = \"/Users/isaacparsons/Desktop/freelance clients/Jayden Streets/jayden-streets/src/Components/ProgressBar.js\";\nimport React, { Component } from 'react';\nimport Draggable from 'react-draggable';\nexport default class ProgressBar extends Component {\n  render() {\n    var _this$props = this.props,\n        width = _this$props.width,\n        height = _this$props.height,\n        completedBarColor = _this$props.completedBarColor,\n        notCompletedBarColor = _this$props.notCompletedBarColor,\n        cursorColor = _this$props.cursorColor,\n        progress = _this$props.progress;\n    var circleRadius = height / 2;\n    var barHeight = 15;\n    var barOffset = (height - barHeight) / 2;\n    var completedBarWidth = width * progress;\n    var notCompletedBarWidth = width - completedBarWidth;\n    var cursorOffset = completedBarWidth;\n    return (// <div style = {{\n      //     display: 'flex', \n      //     flexDirection: 'row', \n      //     height: height, \n      //     width: width,\n      //     alignItems: 'center'}}>\n      //     <svg width = {width} height={height}>\n      //         <rect x = \"0\" y={barOffset} fill={completedBarColor} width={completedBarWidth} height={barHeight}/>\n      //         <rect x={completedBarWidth} y={barOffset} fill={notCompletedBarColor} width={notCompletedBarWidth} height={barHeight}/>\n      //         <circle \n      //             transform={`translate(${x}, ${y})`}\n      //             onMouseDown = {this.cursorDragStart} \n      //             onMouseMove = {this.cursorDragging}\n      //             cx={cursorOffset} cy={circleRadius} r={circleRadius} fill={cursorColor} />\n      //     </svg>\n      // </div>\n      React.createElement(Draggable, {\n        axis: \"x\",\n        handle: \".handle\",\n        defaultPosition: {\n          x: 0,\n          y: 0\n        },\n        position: null,\n        grid: [1, 25],\n        scale: 1,\n        onStart: this.handleStart,\n        onDrag: this.handleDrag,\n        onStop: this.handleStop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"handle\",\n        style: {\n          height: 100,\n          borderRadius: 100,\n          backgroundColor: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Drag from here\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"This readme is really dragging on...\")))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/isaacparsons/Desktop/freelance clients/Jayden Streets/jayden-streets/src/Components/ProgressBar.js"],"names":["React","Component","Draggable","ProgressBar","render","props","width","height","completedBarColor","notCompletedBarColor","cursorColor","progress","circleRadius","barHeight","barOffset","completedBarWidth","notCompletedBarWidth","cursorOffset","x","y","handleStart","handleDrag","handleStop","borderRadius","backgroundColor"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAG/CG,EAAAA,MAAM,GAAG;AAAA,sBACiF,KAAKC,KADtF;AAAA,QACAC,KADA,eACAA,KADA;AAAA,QACOC,MADP,eACOA,MADP;AAAA,QACeC,iBADf,eACeA,iBADf;AAAA,QACkCC,oBADlC,eACkCA,oBADlC;AAAA,QACwDC,WADxD,eACwDA,WADxD;AAAA,QACqEC,QADrE,eACqEA,QADrE;AAEL,QAAIC,YAAY,GAAGL,MAAM,GAAG,CAA5B;AACA,QAAIM,SAAS,GAAG,EAAhB;AACA,QAAIC,SAAS,GAAG,CAACP,MAAM,GAAGM,SAAV,IAAqB,CAArC;AACA,QAAIE,iBAAiB,GAAGT,KAAK,GAAGK,QAAhC;AACA,QAAIK,oBAAoB,GAAGV,KAAK,GAAGS,iBAAnC;AACA,QAAIE,YAAY,GAAGF,iBAAnB;AAGA,WACI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAC,SAAD;AACI,QAAA,IAAI,EAAC,GADT;AAEI,QAAA,MAAM,EAAC,SAFX;AAGI,QAAA,eAAe,EAAE;AAACG,UAAAA,CAAC,EAAE,CAAJ;AAAOC,UAAAA,CAAC,EAAE;AAAV,SAHrB;AAII,QAAA,QAAQ,EAAE,IAJd;AAKI,QAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,CALV;AAMI,QAAA,KAAK,EAAE,CANX;AAOI,QAAA,OAAO,EAAE,KAAKC,WAPlB;AAQI,QAAA,MAAM,EAAE,KAAKC,UARjB;AASI,QAAA,MAAM,EAAE,KAAKC,UATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAI;AAACf,UAAAA,MAAM,EAAE,GAAT;AAAcgB,UAAAA,YAAY,EAAE,GAA5B;AAAiCC,UAAAA,eAAe,EAAE;AAAlD,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAFJ,CAVJ;AAlBJ;AAkCH;;AA/C8C","sourcesContent":["\nimport React, { Component } from 'react'\nimport Draggable from 'react-draggable';\n\nexport default class ProgressBar extends Component {\n\n\n    render() {\n        var {width, height, completedBarColor, notCompletedBarColor, cursorColor, progress} = this.props\n        var circleRadius = height / 2\n        var barHeight = 15\n        var barOffset = (height - barHeight)/2\n        var completedBarWidth = width * progress\n        var notCompletedBarWidth = width - completedBarWidth\n        var cursorOffset = completedBarWidth\n\n\n        return (\n            // <div style = {{\n            //     display: 'flex', \n            //     flexDirection: 'row', \n            //     height: height, \n            //     width: width,\n            //     alignItems: 'center'}}>\n    \n            //     <svg width = {width} height={height}>\n            //         <rect x = \"0\" y={barOffset} fill={completedBarColor} width={completedBarWidth} height={barHeight}/>\n            //         <rect x={completedBarWidth} y={barOffset} fill={notCompletedBarColor} width={notCompletedBarWidth} height={barHeight}/>\n            //         <circle \n            //             transform={`translate(${x}, ${y})`}\n            //             onMouseDown = {this.cursorDragStart} \n            //             onMouseMove = {this.cursorDragging}\n            //             cx={cursorOffset} cy={circleRadius} r={circleRadius} fill={cursorColor} />\n            //     </svg>\n            // </div>\n            <Draggable\n                axis=\"x\"\n                handle=\".handle\"\n                defaultPosition={{x: 0, y: 0}}\n                position={null}\n                grid={[1, 25]}\n                scale={1}\n                onStart={this.handleStart}\n                onDrag={this.handleDrag}\n                onStop={this.handleStop}>\n                <div>\n                    <div className=\"handle\" style = {{height: 100, borderRadius: 100, backgroundColor: 'black'}}>Drag from here</div>\n                    <div>This readme is really dragging on...</div>\n                </div>\n            </Draggable>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}